--- ./orig/MPI_Info_get.c	2019-02-19 13:52:58.000000001 -0500
+++ ./src/MPI_Info_get.c	2019-01-08 11:09:49.000000001 -0500
@@ -1,3 +1,110 @@
+/* 
+MPI_Info_get
+
+   Retrieves the value associated with a key
+int MPI_Info_get(
+  MPI_Info info,
+  char *key,
+  int valuelen,
+  char *value,
+  int *flag
+);
+
+int MPI_Info_get(
+  MPI_Info info,
+  wchar_t *key,
+  int valuelen,
+  wchar_t *value,
+  int *flag
+);
+
+Parameters
+
+   info
+          [in] info object (handle)
+
+   key
+          [in] key (string)
+
+   valuelen
+          [in] length of value argument (integer)
+
+   value
+          [out] value (string)
+
+   flag
+          [out] true if key defined, false if not (boolean)
+
+Remarks
+
+   This function retrieves the value associated with key in a previous
+   call to MPI_INFO_SET. If such a key exists, it sets flag to true and
+   returns the value in value, otherwise it sets flag to false and leaves
+   value unchanged. valuelen is the number of characters available in
+   value. If it is less than the actual size of the value, the value is
+   truncated. In C, valuelen should be one less than the amount of
+   allocated space to allow for the null terminator.
+
+   If key is larger than MPI_MAX_INFO_KEY, the call is erroneous.
+
+Thread and Interrupt Safety
+
+   This routine is thread and interrupt safe only if no MPI routine that
+   updates or frees the same MPI_Info object may be called concurrently
+   with this routine.
+
+   The MPI standard defined a thread-safe interface but this does not mean
+   that all routines may be called without any thread locks. For example,
+   two threads must not attempt to change the contents of the same
+   MPI_Info object concurrently. The user is responsible in this case for
+   using some mechanism, such as thread locks, to ensure that only one
+   thread at a time makes use of this routine.
+
+Notes for Fortran
+
+   All MPI routines in Fortran (except for MPI_WTIME and MPI_WTICK) have
+   an additional argument ierr at the end of the argument list. ierr is an
+   integer and has the same meaning as the return value of the routine in
+   C. In Fortran, MPI routines are subroutines, and are invoked with the
+   call statement.
+
+   All MPI objects (e.g., MPI_Datatype, MPI_Comm) are of type INTEGER in
+   Fortran.
+
+Errors
+
+   All MPI routines (except MPI_Wtime and MPI_Wtick) return an error
+   value; C routines as the value of the function and Fortran routines in
+   the last argument. Before the value is returned, the current MPI error
+   handler is called. By default, this error handler aborts the MPI job.
+   The error handler may be changed with MPI_Comm_set_errhandler (for
+   communicators), MPI_File_set_errhandler (for files), and
+   MPI_Win_set_errhandler (for RMA windows). The MPI-1 routine
+   MPI_Errhandler_set may be used but its use is deprecated. The
+   predefined error handler MPI_ERRORS_RETURN may be used to cause error
+   values to be returned. Note that MPI does not guarentee that an MPI
+   program can continue past an error; however, MPI implementations will
+   attempt to continue whenever possible.
+
+   MPI_SUCCESS
+          No error; MPI routine completed successfully.
+
+   MPI_ERR_OTHER
+          Other error; use MPI_Error_string to get more information about
+          this error code.
+
+   MPI_ERR_INFO_KEY
+          Invalid or null key string for info.
+
+   MPI_ERR_ARG
+          Invalid argument. Some argument is invalid and is not identified
+          by a specific error class (e.g., MPI_ERR_RANK).
+
+   MPI_ERR_INFO_VALUE
+          Invalid or null value string for info
+
+*/
+ 
 // Copyright 2009 Deino Software. All rights reserved.
 // Source: http://mpi.deino.net/mpi_functions/index.htm
 
