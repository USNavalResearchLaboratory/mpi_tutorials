--- ./orig/MPI_Graphdims_get.c	2019-02-19 13:52:58.000000001 -0500
+++ ./src/MPI_Graphdims_get.c	2019-01-08 11:09:49.000000001 -0500
@@ -1,3 +1,83 @@
+/* 
+MPI_Graphdims_get
+
+   Retrieves graph topology information associated with a communicator
+int MPI_Graphdims_get(
+  MPI_Comm comm,
+  int *nnodes,
+  int *nedges
+);
+
+Parameters
+
+   comm
+          [in] communicator for group with graph structure (handle)
+
+   nnodes
+          [out] number of nodes in graph (integer)
+
+   nedges
+          [out] number of edges in graph (integer)
+
+Remarks
+
+   Functions MPI_GRAPHDIMS_GET and MPI_GRAPH_GET retrieve the
+   graph-topology information that was associated with a communicator by
+   MPI_GRAPH_CREATE.
+
+   The information provided by MPI_GRAPHDIMS_GET can be used to dimension
+   the vectors index and edges correctly for calls to MPI_GRAPH_GET.
+
+Thread and Interrupt Safety
+
+   This routine is both thread- and interrupt-safe. This means that this
+   routine may safely be used by multiple threads and from within a signal
+   handler.
+
+Notes for Fortran
+
+   All MPI routines in Fortran (except for MPI_WTIME and MPI_WTICK) have
+   an additional argument ierr at the end of the argument list. ierr is an
+   integer and has the same meaning as the return value of the routine in
+   C. In Fortran, MPI routines are subroutines, and are invoked with the
+   call statement.
+
+   All MPI objects (e.g., MPI_Datatype, MPI_Comm) are of type INTEGER in
+   Fortran.
+
+Errors
+
+   All MPI routines (except MPI_Wtime and MPI_Wtick) return an error
+   value; C routines as the value of the function and Fortran routines in
+   the last argument. Before the value is returned, the current MPI error
+   handler is called. By default, this error handler aborts the MPI job.
+   The error handler may be changed with MPI_Comm_set_errhandler (for
+   communicators), MPI_File_set_errhandler (for files), and
+   MPI_Win_set_errhandler (for RMA windows). The MPI-1 routine
+   MPI_Errhandler_set may be used but its use is deprecated. The
+   predefined error handler MPI_ERRORS_RETURN may be used to cause error
+   values to be returned. Note that MPI does not guarentee that an MPI
+   program can continue past an error; however, MPI implementations will
+   attempt to continue whenever possible.
+
+   MPI_SUCCESS
+          No error; MPI routine completed successfully.
+
+   MPI_ERR_TOPOLOGY
+          Invalid topology. Either there is no topology associated with
+          this communicator, or it is not the correct type (e.g., MPI_CART
+          when expecting MPI_GRAPH).
+
+   MPI_ERR_COMM
+          Invalid communicator. A common error is to use a null
+          communicator in a call (not even allowed in MPI_Comm_rank).
+
+   MPI_ERR_ARG
+          Invalid argument. Some argument is invalid and is not identified
+          by a specific error class (e.g., MPI_ERR_RANK).
+
+*/
+ 
 // Copyright 2009 Deino Software. All rights reserved.
 // Source: http://mpi.deino.net/mpi_functions/index.htm
 
